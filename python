import openpyxl
import pandas as pd
import os
import datetime
#from IPython.display import display
def print_full(x):
    df = pd.DataFrame(x)
    pd.set_option('display.max_rows', 2000)
    pd.set_option('display.max_columns', 20)
    display(df)
excelname= "kd"
sheetname = "kd"

wb = openpyxl.load_workbook(str(excelname)+".xlsx")
ws = wb[str(sheetname)]

dataset = []

i = 1
while(ws.cell(row=i, column=1).value!=None):
    row = []
    j = 1
    while(ws.cell(row=i, column=j).value!=None):
        row.append(ws.cell(row=i, column=j).value)
        j = j +1
    dataset.append(row)
    i = i + 1   
pd.DataFrame(dataset) 
# trade =[[0 for x in range(5)] for y in range(len(dataset))]
trade = []
for i in range(0, len(dataset)):
    row = []
    for j in range(0, 11):
        row.append(0)
    trade.append(row)
pd.DataFrame(trade)  
trade[0][0] = "date"
trade[0][1] = "open"
trade[0][2] = "high"
trade[0][3] = "low"
trade[0][4] = "close"
trade[0][5] = "rsv"
trade[0][6] = "k"
trade[0][7] = "d"
trade[0][8] = "buy_day"
trade[0][9] = "cum_buy_day"
trade[0][10] = "sell_day"
pd.DataFrame(trade).head()
for i in range(1, len(trade)):
    trade[i][0] = dataset[i][0]
    trade[i][1] = dataset[i][1]
    trade[i][2] = dataset[i][2]
    trade[i][3] = dataset[i][3]
    trade[i][4] = dataset[i][4]
    trade[i][5] = float(dataset[i][5])
pd.DataFrame(trade).head(10) 
for i in range(9,len(trade)):
    high=trade[i][2]
    low=trade[i][3]
    for j in range(1,9):
        if(trade[i-j][2]>high):
            high=trade[i-j][2]
        if(trade[i-j][3]<low):
            low=trade[i-j][3]
        trade[i][5]=(trade[i][4]-low)/(high-low)*100
    rsv=trade[i][5] 
pd.DataFrame(trade).head(10)
i=10
trade[9][6]=50
trade[9][7]=50
for i in range(10, len(trade)): 
    trade[i][6] = trade[i-1][6]*(2/3) + trade[i][5]*(1/3)   
    trade[i][7] = trade[i-1][7]*(2/3) + trade[i][6]*(1/3)
pd.DataFrame(trade).head()  
for i in range(10, len(trade)):
    if(trade[i][6] > trade[i][7])and(trade[i-1][6]<=trade[i-1][7]):
        trade[i][8] = 1     
pd.DataFrame(trade).head()        
